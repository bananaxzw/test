<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
  <!--  <script src="jquery-1.4.1-vsdoc.js" type="text/javascript"></script>-->
    <script src="JsLib/jq1.72.js" type="text/javascript">
    $().attr("sfs","saf").
    </script>
    <style>
    html,body{height:100%;}
    </style>
</head>
<body style= "padding:0px; margin:0px; height:100%">
<div id="s" style="border:20px solid red; padding:0px; position:relative; height:100px;">
<div id="Div1" ki="saf" style="height:0px; width:0px;">
</div>
</div>
<script type="text/javascript">
    function show(i) { 
    /
    
   }
    alert($("#Div1").css("left"));
    alert(document.getElementById("Div1").currentStyle.height);
</script>
<select multiple=multiple id="sfs">
<option value="sfsaf">sff</option>
<option value="sfsaf1">sff</option>
<option value="sfsaf2">sff</option>
<option value="sfsaf4">sff</option>
<option value="sfsafgd">sff</option>
<option value="sfsadgf">sff</option>
<option>sff</option>
</select>
<select  id="Select1" tabindex="1">
<option value="sfsaf">sff</option>
<option value="sfsaf">sff</option>
<option id="13" value="sfsaf">sff</option>
<option id="12">sff</option>
<option value="sfsaf">sff</option>
<option value="sfsaf">sff</option>
<option>sff</option>
</select>
<div id="ghj"><div class="s"></div><div class="s"></div><div class="m"></div><div class="s"></div></div>
<div class="s"></div>
<input type=button  onclick="tt();"/>
 <script type="text/javascript">
     function ClassA(sColor) {
         this.color = sColor;
         this.sayColor = function () {
             alert(this.color);
         };
     }

     function ClassB() {
         this.name = "";
         this.sayName = function () {
             alert(this.name);
         };
     }

     ClassB.prototype = new ClassA();

     var objA = new ClassA();
     var objB = new ClassB();
     objA.color = "blue";
     objB.color = "red";
     objB.name = "John";
     objA.sayColor();
     objB.sayColor();
     objB.sayName();

//     ClassB.prototype.name = "";
//     ClassB.prototype
// var tt=    $.map([0, 2, 3], function (i, d) {
//         return i;
//     });
//     function gettabIndex(ele) {
//                // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
//         var attributeNode = ele.getAttributeNode("ki");
//                return attributeNode && attributeNode.specified
//						? attributeNode.value
//						: ele.nodeName.match(/^(a|area|button|input|object|select|textarea)$/i)
//							? 0
//							: undefined;
//            }
//            alert(gettabIndex(document.getElementById("Div1")));

     $(".s").wrapAll("<div id='hjl'></div><div id='sf'></div>");
     var p = document.createDocumentFragment();
     p.appendChild(document.createElement("div"));

//     document.getElementById("Div1").appendChild(p);

     $("#Div1").wrapInner("<div id='sfsf'><p></p><p></p></div><p></p>");
  //   nodes[0] = 1;
     function tt() {

         this.ff = function () {
             alert(this.name);
         }
     }


     var mm = new tt();
     mm.name = "safsa";
     mm.ff();
//     mm[0] = 1;
//     mm[2] = 2;
//     for (var i in mm) {
//         console.log(i);
//     
//     }

     console.log($("#Div1").offsetParent());
//     alert(document.body.offsetTop);
//     var node = document.getElementById("s");
//     alert(node.offsetTop);
//     var node1 = document.getElementById("Div1");
//     alert(node1.offsetTop);
//     var h = node.currentStyle.width;
//     length = true;
//     var foo = {
//         bar: function () {
//             ;
//             return this.length;
//          },
//         length: "long"
//     };
//     (function () {
//         var bar = 2;
//         return  arguments[0]();
//     })(foo.bar);
//     function ttsafsaf() {
//         return this.length;
//     }
//     ttsafsaf();

//     var hhhh = [6, 2, 7, 4];
//     for (var i in hhhh) {
//         console.log(i);
//         console.log(hhhh[i]);
//     }      
//     
//     var key;
//     var tt = {};
//     tt.mm = "fsaf";
//     tt.gg = function () { }

//     for (key in tt) {
//         console.log(tt[key]);
//     }

//     function yyy() {
//         this.tt = function () { };
//         this.gg = "";
//     }

//     for (key in yyy) {
//         console.log(yyy[key]);
//     }
//     console.log(tt.length);

//     console.dir(tt.constructor.prototype);
//     var bb = new Object();
//     var ll = new String("sfs");
//     $("p").bind("myEvent", function (event, message1, message2) {
//         alert(message1 + ' ' + message2);
//     });
//     $("p").bind("click", function (event, message1, message2) {
//         event.stopPropagation();
//         alert(message1 + ' ' + message2);
//     });
//     $("p").trigger("click", ["Hello", "World!"]);
//    
    </script>
    <p id="sfsaf"></p>
    <p>
    </p>

 <script type="text/javascript">
     $.css($("p")[0], "height");
     //$("p").css("height");
 </script>
</body>
</html>
