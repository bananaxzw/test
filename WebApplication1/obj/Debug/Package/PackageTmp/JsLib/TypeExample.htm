<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script src="$SL.js" type="text/javascript"></script>
    <script src="TypeNew.js" type="text/javascript"></script>
    <script type="text/javascript" src="Function.js"></script>
       <script>
           var arr = new Array(6)
           arr[0] = "George"
           arr[1] = "John"
           arr[2] = "Thomas"
           arr[3] = "James"
           arr[4] = "Adrew"
           arr[5] = "Martin"

           document.write(arr + "<br />")
           document.write(arr.splice(2, 0, "William") + "<br />")
           document.write(arr + "<br />")
           alert(undefined === undefined);
           // Create a new Person object constructor
           function Person(name) {
               this.name = name;
           }
           // Add a new method to the Person object
           Person.method('getName', function () {
               return name;
           });
           // Create a new User object constructor
           function User(name, password) {
               this.name = name;
               this.password = password;
           }
           User.prototype.tt = function () {
               return 11;
           }

           // Inherit all the methods from the Person object
           User.inherits(Person);
           // Add a new method to the User object
           User.method('getPassword', function () {
               return this.password;
           });
           // Overwrite the method created by the Person object,
           // but call it again using the uber function
           User.method('getName', function () {
               return "My name is: " + this.name;
           });

           var jjj = new User(1, 2);

           alert(jjj.getName());
           alert(jjj.tt());
           alert(jjj.constructor==User);
    
    </script>
</head>
<body>

</body>
</html>
