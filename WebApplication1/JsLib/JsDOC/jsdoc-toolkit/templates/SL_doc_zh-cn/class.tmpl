<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset={+IO.encoding+}" />
    <meta name="generator" content="JsDoc Toolkit" />
    {! Link.base = "../"; /* all generated links will be relative to this */ !} <title>SL
        API 开发参考文档 - {+data.alias+}</title>
    <script src="../../../sl.js" type="text/javascript"></script>
    <script src="../../../SL.Node.js" type="text/javascript"></script>
    <script src="../../../hl-all.js" type="text/javascript"></script>
    <link href="../../../style.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript">
        sl.ready(function () {
            DlHighlight.HELPERS.highlightByName("code", "pre");
            if (sl.Browser.ie) {
                $("pre.DlHighlight").each(function () {
                    var $this = $(this);
                    $this.html("<pre>" + $this.find("pre").html() + "</pre>");
                })
            }
        });
    </script>
    <style type="text/css">
			{+include("static/style.css")+}
		</style>
</head>
<body>
    <!-- ============================== header ================================= -->
    <!-- begin static/header.html -->
    {+include("static/header.html")+}
    <!-- end static/header.html -->
    <!-- ============================== classes index ============================ -->
    <div class="container-fluid">
        <div class="row-fluid">
            <!-- begin publish.classesIndex -->
            {+publish.classesIndex+}
            <!-- end publish.classesIndex -->
            <div class="span10">
                <div id="content">
                    <!-- ============================== class title ============================ -->
                    <h1 class="classTitle">
                        {! var classType = ""; if (data.isBuiltin()) { classType += "[内建]"; } if (data.isNamespace)
                        { if (data.is('FUNCTION')) { classType += "函数 "; } classType += "命名空间 "; } else
                        { classType += "类 "; } !} {+classType+}{+data.alias+}
                        <div class='file'>define in:{+new Link().toSrc(data.srcFile)+}.</div>
                    </h1>
                    <hr>
                    <!-- ============================== class summary ========================== -->
                    <h3>
                        类概要</h3>
                    <p class="description">
                       	<if test="data.augments.length"><br />Extends
					{+
						data.augments
						.sort()
						.map(
							function($) { return new Link().toSymbol($); }
						)
						.join(", ")
					+}.
				</if>
				{+resolveLinks(data.classDesc)+}</p>
                    <!-- ============================== constructor summary ==================== 
                    <if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
			<table class="summaryTable" cellspacing="0" summary="A summary of the constructor documented in the class {+data.alias+}.">
				<caption>{+classType+}概要</caption>
				<thead>
					<tr>
						<th scope="col">Constructor Attributes</th>
						<th scope="col">Constructor Name and Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="attributes">{!
							if (data.isPrivate) output += "&lt;private&gt; ";
							if (data.isInner) output += "&lt;inner&gt; ";
						!}&nbsp;</td>
						<td class="nameDescription" {!if (data.comment.getTag("hilited").length){output += 'style="color: red"'}!}>
							<div class="fixedFont">
								<b>{+ new Link().toSymbol(data.alias).inner('constructor')+}</b><if test="classType != '命名空间 '">{+ makeSignature(data.params) +}</if>
							</div>
							<div class="description">{+resolveLinks(summarize(data.desc))+}</div>
						</td>
					</tr>
				</tbody>
			</table>
			</if>-->
                    <!-- ============================== properties summary ===================== -->
                    <if test="data.properties.length">
				{! var ownProperties = data.properties.filter(function($){return $.memberOf == data.alias && !$.isNamespace}).sort(makeSortby("name")); !}
				<if test="ownProperties.length">
				<table class="summaryTable" cellspacing="0" summary="A summary of the fields documented in the class {+data.alias+}.">
					<caption>属性概要</caption>
					<thead>
						<tr>
							<!-- <th>
                                成员属性
                            </th>-->
                            <th>
                                名称
                            </th>
                            <th>
                                说明
                            </th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="ownProperties">
                       <tr>
                              <!--  <td>
                                  <label class=" label label-info">{!
								if (member.isPrivate) output += "&lt;private&gt; ";
								if (member.isInner) output += "&lt;inner&gt; ";
								if (member.isStatic) output += "&lt;static&gt; ";
								if (member.isConstant) output += "&lt;constant&gt; ";
							!}&nbsp;</label>
                                </td>-->
                                <td>
                                  <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>
                                </td>
                                <td>
                                   {+resolveLinks(summarize(member.desc))+}
                                </td>
                            </tr>
					</for>
					</tbody>
				</table>
				</if>
				
				<if test="data.inheritsFrom.length">
				<dl class="inheritsList">
				{!
					var borrowedMembers = data.properties.filter(function($) {return $.memberOf != data.alias});
					
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Fields borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
				!}
				</dl>
				</if>
			</if>
                    <!-- ============================== methods summary ======================== -->
                    <if test="data.methods.length">
				{! var ownMethods = data.methods.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
				<if test="ownMethods.length">
                <h3>方法概要</h3>
				<table class="summaryTable" cellspacing="0" summary="A summary of the methods documented in the class {+data.alias+}.">
					<thead>
						<tr>
						<!-- <th>
                                成员属性
                            </th>-->
                            <th>
                                名称
                            </th>
                            <th>
                                说明
                            </th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="ownMethods">
                        <tr>
                               <!-- <td>
                                  <label class=" label label-info">{!
								if (member.isPrivate) output += "&lt;private&gt; ";
								if (member.isInner) output += "&lt;inner&gt; ";
								if (member.isStatic) output += "&lt;static&gt; ";
								if (member.isConstant) output += "&lt;constant&gt; ";
							!}&nbsp;</label>
                                </td>-->
                                <td>
                                 <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>{+makeSignature(member.params)+}
                                </td>
                                <td>
                                   {+resolveLinks(summarize(member.desc))+}
                                </td>
                            </tr>
					</for>
					</tbody>
				</table>
				</if>
				
				<if test="data.inheritsFrom.length">
				<dl class="inheritsList">
				{!
					var borrowedMembers = data.methods.filter(function($) {return $.memberOf != data.alias});
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Methods borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
				
				!}
				</dl>
				</if>
			</if>
                    <!-- ============================== events summary ======================== -->
                    <if test="data.events.length">
				{! var ownEvents = data.events.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
				<if test="ownEvents.length">
				<table class="summaryTable" cellspacing="0" summary="A summary of the events documented in the class {+data.alias+}.">
					<caption>事件概要</caption>
					<thead>
						<tr>
						<!-- <th>
                                成员属性
                            </th>-->
                            <th>
                                名称
                            </th>
                            <th>
                                说明
                            </th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="ownEvents">
						 <tr>
                             <!--   <td>
                                  <label class=" label label-info">{!
								if (member.isPrivate) output += "&lt;private&gt; ";
								if (member.isInner) output += "&lt;inner&gt; ";
								if (member.isStatic) output += "&lt;static&gt; ";
								if (member.isConstant) output += "&lt;constant&gt; ";
							!}&nbsp;</label>
                                </td>-->
                                <td>
                                 <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>{+makeSignature(member.params)+}
                                </td>
                                <td>
                                   {+resolveLinks(summarize(member.desc))+}
                                </td>
                            </tr>
					</for>
					</tbody>
				</table>
				</if>
				
				<if test="data.inheritsFrom.length">
				<dl class="inheritsList">
				{!
					var borrowedMembers = data.events.filter(function($) {return $.memberOf != data.alias});
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Events borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
				
				!}
				</dl>
				</if>
			</if>
                    <!-- ============================== constructor details ====================
                    <if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
			<div class="details"><a name="constructor"> </a>
				<div class="sectionTitle">
					{+classType+} 详解
				</div>
				
				<div class="detailTitle fixedFont">
					<span class="methodType">{!
						if (data.isPrivate) output += "&lt;private&gt; ";
						if (data.isInner) output += "&lt;inner&gt; ";
					!}</span>
						<b>{+ data.alias +}</b><if test="classType != '命名空间 '">{+ makeSignature(data.params) +}</if>
				</div>
				
				
				<dl class="description">
					<dt class="heading">功能:</dt>
					<dd>
					{+resolveLinks(data.desc)+}
					<if test="data.author"><br /><i>Author: </i>{+data.author+}.</if>
					</dd>
				</dl>
				
				<if test="data.example.length">
				<for each="example" in="data.example">
				<pre class="code">{+example+}</pre>
				</for>
				</if>
				
				
					<if test="data.params.length">
						<dl class="detailList">
							<dt class="heading">参数:</dt>
							<dd>
								<for each="item" in="data.params">
								<dl class="paramsList">
									<dt>
										{+((item.type)?""+("<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type)+"}</span> ")) : "")+} <b>{+item.name+}</b>
										<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
									</dt>
									<dd>{+resolveLinks(item.desc)+}</dd>
								</dl>
								</for>
							</dd>
						</dl>
					</if>
					<if test="data.deprecated">
						<dl class="detailList">
						<dt class="heading">弃用的:</dt>
						<dt>
							{+resolveLinks(data.deprecated)+}
						</dt>
						</dl>
					</if>
					<if test="data.since">
						<dl class="detailList">
						<dt class="heading">Since:</dt>
							<dd>{+ data.since +}</dd>
						</dl>
					</if>
					<if test="data.exceptions.length">
						<dl class="detailList">
						<dt class="heading">Throws:</dt>
						<for each="item" in="data.exceptions">
							<dt>
								{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
							</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
						</for>
						</dl>
					</if>
					<if test="data.returns.length">
						<dl class="detailList">
						<dt class="heading">返回:</dt>
						<for each="item" in="data.returns">
								<dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
						</for>
						</dl>
					</if>
					<if test="data.requires.length">
						<dl class="detailList">
						<dt class="heading">需要:</dt>
						<for each="item" in="data.requires">
							<dd>{+ resolveLinks(item) +}</dd>
						</for>
						</dl>
					</if>
					<if test="data.see.length">
						<dl class="detailList">
						<dt class="heading">参看:</dt>
						<for each="item" in="data.see">
							<dd>{+ new Link().toSymbol(item) +}</dd>
						</for>
						</dl>
					</if>

			</div>
			</if> -->
                    <!-- ============================== field details ========================== -->
                    <if test="defined(ownProperties) && ownProperties.length">
				<div class="sectionTitle">
					属性详解
				</div>
				<for each="member" in="ownProperties">
					<a name="{+Link.symbolNameToLinkName(member)+}"> </a>
					<div class="detailTitle fixedFont">
						<span class="methodType">{!
							if (member.isPrivate) output += "&lt;private&gt; ";
							if (member.isInner) output += "&lt;inner&gt; ";
							if (member.isStatic) output += "&lt;static&gt; ";
							if (member.isConstant) output += "&lt;constant&gt; ";
						!}</span>
					
					<if test="member.type"><span class="methodReturn">{{+new Link().toSymbol(member.type)+}}</span></if>
					<if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>
					
					</div>
					<div class="description">
						{+resolveLinks(member.desc)+}
						<if test="member.srcFile != data.srcFile">
							<br />
							<i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
						</if>
						<if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
					</div>
					
					<if test="member.example.length">
					<for each="example" in="member.example">
					<pre class="code">{+example+}</pre>
					</for>
					</if>

						<if test="member.deprecated">
							<dl class="detailList">
							<dt class="heading">Deprecated:</dt>
							<dt>
								{+ resolveLinks(member.deprecated) +}
							</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl class="detailList">
							<dt class="heading">Since:</dt>
								<dd>{+ member.since +}</dd>
							</dl>
						</if>
						<if test="member.see.length">
							<dl class="detailList">
							<dt class="heading">See:</dt>
							<for each="item" in="member.see">
							<dd>{+ new Link().toSymbol(item) +}</dd>
							</for>
							</dl>
						</if>
						<if test="member.defaultValue">
							<dl class="detailList">
							<dt class="heading">Default Value:</dt>
							<dd>
								{+resolveLinks(member.defaultValue)+}
							</dd>
							</dl>
						</if>

					<if test="!$member_last"><hr /></if>
				</for>
			</if>
                    <!-- ============================== method details ========================= -->
                    <if test="defined(ownMethods) && ownMethods.length">
				<h3>
					方法详解
				</h3>
				<for each="member" in="ownMethods">
					<a name="{+Link.symbolNameToLinkName(member)+}"> </a>
					<div class="detailTitle fixedFont">
						<span class="methodType">{!
							if (member.isPrivate) output += "&lt;private&gt; ";
							if (member.isInner) output += "&lt;inner&gt; ";
							if (member.isStatic) output += "&lt;static&gt; ";
						!}</span>
					 <label class=" label label-info methodName">
					<if test="member.type"><span class="methodReturn">{{+new Link().toSymbol(member.type)+}}</span></if>
					<if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>{+makeSignature(member.params)+}
					</label>
					</div>
					<dl class="description">
						<dt class="heading">功能:</dt>
						<dd>
						{+resolveLinks(member.desc)+}
						<if test="member.srcFile != data.srcFile">
							<br />
							<i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
						</if>
						<if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
						</dd>
					</dl>
					
					<if test="member.example.length">
					<for each="example" in="member.example">
					<pre name="code" class='js'>{+example+}</pre>
					</for>
					</if>
					
						<if test="member.params.length">
							<dl class="detailList">
								<dt class="heading">参数:</dt>
								<dd>
									<for each="item" in="member.params">
									<dl class="paramsList">
										<dt>
											{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}<b>{+item.name+}</b>
											<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
										</dt>
										<dd>{+resolveLinks(item.desc)+}</dd>
									</dl>
									</for>
								</dd>
							</dl>
						</if>
						<if test="member.deprecated">
							<dl class="detailList">
							<dt class="heading">弃用的:</dt>
							<dt>
								{+ resolveLinks(member.deprecated) +}
							</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl class="detailList">
							<dt class="heading">Since:</dt>
								<dd>{+ member.since +}</dd>
							</dl>
							</dl>
						</if>
						<if test="member.exceptions.length">
							<dl class="detailList">
							<dt class="heading">Throws:</dt>
							<for each="item" in="member.exceptions">
								<dt>
									{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
								</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</if>
						<if test="member.returns.length">
							<dl class="detailList">
							<dt class="heading">返回:</dt>
							<for each="item" in="member.returns">
								<dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</if>
						<if test="member.requires.length">
							<dl class="detailList">
							<dt class="heading">需要:</dt>
							<for each="item" in="member.requires">
								<dd>{+ resolveLinks(item) +}</dd>
							</for>
							</dl>
						</if>
						<if test="member.see.length">
							<dl class="detailList">
							<dt class="heading">参看:</dt>
							<for each="item" in="member.see">
								<dd>{+ new Link().toSymbol(item) +}</dd>
							</for>
							</dl>
						</if>

					<if test="!$member_last"><hr /></if>
				</for>
			</if>
                    <!-- ============================== event details ========================= -->
                    <if test="defined(ownEvents) && ownEvents.length">
				<div class="sectionTitle">
					事件详解
				</div>
				<for each="member" in="ownEvents">
					<a name="event:{+Link.symbolNameToLinkName(member)+}"> </a>
					<div class="detailTitle fixedFont">
						<span class="methodType">{!
							if (member.isPrivate) output += "&lt;private&gt; ";
							if (member.isInner) output += "&lt;inner&gt; ";
							if (member.isStatic) output += "&lt;static&gt; ";
						!}</span>
					
					<if test="member.type"><span class="methodReturn">{{+new Link().toSymbol(member.type)+}}</span></if>
					<if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>{+makeSignature(member.params)+}
					
					</div>
					<dl class="description">
						<dt class="heading">功能:</dt>
						<dd>
						{+resolveLinks(member.desc)+}
						<if test="member.srcFile != data.srcFile">
							<br />
							<i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
						</if>
						<if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
						</dd>
					</dl>
					
					<if test="member.example.length">
					<for each="example" in="member.example">
					<pre class="code">{+example+}</pre>
					</for>
					</if>
					
						<if test="member.params.length">
							<dl class="detailList">
								<dt class="heading">参数:</dt>
								<dd>
									<for each="item" in="member.params">
									<dl class="paramsList">
										<dt>
											{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}<b>{+item.name+}</b>
											<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
										</dt>
										<dd>{+ resolveLinks(item.desc) +}</dd>
									</dl>
									</for>
								</dd>
							</dl>
						</if>
						<if test="member.deprecated">
							<dl class="detailList">
							<dt class="heading">弃用的:</dt>
							<dt>
								{+ resolveLinks(member.deprecated) +}
							</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl class="detailList">
							<dt class="heading">Since:</dt>
								<dd>{+ member.since +}</dd>
							</dl>
							</dl>
						</if>
						<if test="member.exceptions.length">
							<dl class="detailList">
							<dt class="heading">Throws:</dt>
							<for each="item" in="member.exceptions">
								<dt>
									{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
								</dt>
								<dd>{+ resolveLinks(item.desc) +}</dd>
							</for>
							</dl>
						</if>
						<if test="member.returns.length">
							<dl class="detailList">
							<dt class="heading">返回:</dt>
							<for each="item" in="member.returns">
								<dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</if>
						<if test="member.requires.length">
							<dl class="detailList">
							<dt class="heading">需要:</dt>
							<for each="item" in="member.requires">
								<dd>{+ resolveLinks(item) +}</dd>
							</for>
							</dl>
						</if>
						<if test="member.see.length">
							<dl class="detailList">
							<dt class="heading">参看:</dt>
							<for each="item" in="member.see">
								<dd>{+ new Link().toSymbol(item) +}</dd>
							</for>
							</dl>
						</if>

					<if test="!$member_last"><hr /></if>
				</for>
			</if>
                    <hr />
                </div>
            </div>
        </div>
    </div>
</body>
</html>
